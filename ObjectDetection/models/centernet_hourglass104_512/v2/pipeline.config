model {
  center_net {
    num_classes: 42
    image_resizer {
      keep_aspect_ratio_resizer {
        min_dimension: 512
        max_dimension: 512
        pad_to_max_dimension: true
        per_channel_pad_value: [255.0, 255.0, 255.0]
        resize_method: AREA
      }
    }

    feature_extractor {
      type: "hourglass_104"
      channel_means: [127, 127, 127]
      channel_stds: [127, 127, 127]
    }

    object_detection_task {
      task_loss_weight: 1.0
      offset_loss_weight: 1.0
      scale_loss_weight: 0.1
      localization_loss {
        l1_localization_loss  {
        }
      }
    }

    object_center_params {
      object_center_loss_weight: 1.0
      classification_loss {
        weighted_sigmoid_focal {
          gamma: 2.0
          alpha: 0.25
        }
      }

      min_box_overlap_iou: 0.6
      max_box_predictions: 30
    }
  }
}

train_config {
  batch_size: 8
  data_augmentation_options {
    custom_augmentation {
    }
  }
  
  optimizer {
    adam_optimizer {
      learning_rate {
        exponential_oscillating_learning_rate {
          learning_rate_base: 1e-3
          warmup_learning_rate: 1e-5
          warmup_steps: 1000
          hold_base_rate_steps: 1000
          decay_steps: 2000
          decay_factor: 0.98
          osc_amplitude: 1e-4
          osc_period: 15000
          min_rate: 1e-5
        }
      }
      epsilon: 1e-7
    }

    use_moving_average: false
  }
  
  fine_tune_checkpoint: "./models/centernet_hourglass104_512/v1/best_ckps/ckpt-260"
  num_steps: 150000
  startup_delay_steps: 0.0
  replicas_to_aggregate: 5
  max_number_of_boxes: 30
  unpad_groundtruth_tensors: false
  fine_tune_checkpoint_type: "detection"
  use_bfloat16: false
  fine_tune_checkpoint_version: V2
}

train_input_reader {
  label_map_path: "./data/label_map.pbtxt"
  tf_record_input_reader {
    input_path: "./data/train-*.tfrecord"
  }
}

eval_config {
  metrics_set: "coco_detection_metrics"
  use_moving_averages: false
}

eval_input_reader {
  label_map_path: "./data/label_map.pbtxt"
  shuffle: false
  num_epochs: 1
  tf_record_input_reader {
    input_path: "./data/val.tfrecord"
  }
}