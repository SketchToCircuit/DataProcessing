model {
  ssd {
    num_classes: 42
    image_resizer {
      keep_aspect_ratio_resizer {
        min_dimension: 640
        max_dimension: 640
        pad_to_max_dimension: true
        per_channel_pad_value: [1.0, 1.0, 1.0]
        resize_method: AREA
      }
    }

    feature_extractor {
      type: "ssd_resnet101_v1_fpn_keras"
      depth_multiplier: 1.0
      min_depth: 16
      conv_hyperparams {
        regularizer {
          l1_regularizer {
            weight: 0.0001
          }
        }
        initializer {
          truncated_normal_initializer {
            mean: 0.0
            stddev: 0.03
          }
        }
        activation: RELU_6
        batch_norm {
          decay: 0.997
          scale: true
          epsilon: 0.001
        }
      }
      override_base_feature_extractor_hyperparams: true
      fpn {
        min_level: 3
        max_level: 7
      }
    }
    box_coder {
      faster_rcnn_box_coder {
        y_scale: 10.0
        x_scale: 10.0
        height_scale: 5.0
        width_scale: 5.0
      }
    }
    matcher {
      argmax_matcher {
        matched_threshold: 0.5
        unmatched_threshold: 0.5
        ignore_thresholds: false
        negatives_lower_than_unmatched: true
        force_match_for_each_row: true
        use_matmul_gather: true
      }
    }
    similarity_calculator {
      iou_similarity {
      }
    }
    box_predictor {
      weight_shared_convolutional_box_predictor {
        conv_hyperparams {
          regularizer {
            l2_regularizer {
              weight: 0.0001
            }
          }
          initializer {
            random_normal_initializer {
              mean: 0.0
              stddev: 0.01
            }
          }
          activation: RELU_6
          batch_norm {
            decay: 0.997
            scale: true
            epsilon: 0.001
          }
        }
        depth: 160
        num_layers_before_predictor: 4
        kernel_size: 3
        class_prediction_bias_init: -4.6
        use_dropout: true
        dropout_keep_probability: 0.6
      }
    }
    anchor_generator {
      multiscale_anchor_generator {
        min_level: 3
        max_level: 7
        anchor_scale: 3.0
        aspect_ratios: [0.2, 0.286, 0.5, 1.0, 2.0, 3.0, 5.0]
        scales_per_octave: 2
      }
    }
    post_processing {
      batch_non_max_suppression {
        score_threshold: 1.0e-08
        iou_threshold: 0.5
        max_detections_per_class: 100
        max_total_detections: 100
        use_static_shapes: false
        soft_nms_sigma: 0.5
      }
      score_converter: SIGMOID
    }
    normalize_loss_by_num_matches: true
    loss {
      localization_loss {
        weighted_smooth_l1 {
        }
      }
      classification_loss {
        weighted_sigmoid_focal {
          gamma: 2.0
          alpha: 0.25
        }
      }
      classification_weight: 1.0
      localization_weight: 1.5
    }
    encode_background_as_zeros: true
    normalize_loc_loss_by_codesize: true
    inplace_batchnorm_update: true
    freeze_batchnorm: false
  }
}

train_config {
  batch_size: 8

  data_augmentation_options {
    custom_augmentation {
    }
  }

  sync_replicas: true
  optimizer {
    momentum_optimizer {
      learning_rate {
        exponential_oscillating_learning_rate {
          learning_rate_base: 0.01
          warmup_learning_rate: 0.005
          warmup_steps: 1000
          hold_base_rate_steps: 1000
          decay_steps: 900
          decay_factor: 0.95
          osc_amplitude: 0.002
          osc_period: 6000
          min_rate: 0.0005
        }
      }
      momentum_optimizer_value: 0.9
    }
    use_moving_average: false
  }

  fine_tune_checkpoint: "./models/ssd_resnet101_640/v7/ckpt-343"
  num_steps: 100000
  startup_delay_steps: 0.0
  replicas_to_aggregate: 8
  max_number_of_boxes: 100
  unpad_groundtruth_tensors: false
  fine_tune_checkpoint_type: "detection"
  use_bfloat16: false
  fine_tune_checkpoint_version: V2
}

train_input_reader {
  label_map_path: "./data/label_map.pbtxt"
  tf_record_input_reader {
    input_path: "./data/train-*.tfrecord"
  }
}

eval_config {
  metrics_set: "coco_detection_metrics"
  use_moving_averages: false
}

eval_input_reader {
  label_map_path: "./data/label_map.pbtxt"
  shuffle: false
  num_epochs: 1
  tf_record_input_reader {
    input_path: "./data/val.tfrecord"
  }
}